@startuml
class cs211.project.controllers.JoinTeamsController {
- VBox teamsContainer
- String[] data
- String username
- String eventId
+ void initialize()
- void onClickBackButton()
}
class cs211.project.controllers.PostAddingController {
- TextField postTextField
- {static} String post_csv_path
- String teamId
- String username
+ void initialize()
- void postButtonClick()
- void goBack()
- int getNextId()
- void appendToCSV(int,String)
+ void onClickGoBack(ActionEvent)
}
class cs211.project.controllers.CommunityPostController {
- String teamId
- String username
- String role
- Label teamName
- VBox postsContainer
- Button signOutButton
- ImageView profilePic
- UserAccount user
- {static} String post_csv_path
- {static} String postBox_fxml_path
- {static} String team_csv_path
+ void initialize()
+ void setData(String)
- List<String[]> readPostsFromCSV()
- void displayProfilePicture(String)
- String getProfilePicturePath(String)
- void loadPosts()
+ String getPostDetailForId(int)
+ void addPostButtonClick()
- void onClickUserProfile()
- String getTeamNameFromCSV()
+ void onManageEventClick()
+ void onClickSignOut()
+ void onClickHomeBUtton()
}
class cs211.project.controllers.TeamScheduleController {
- TableView teamScheduleTableView
- AnchorPane whenSelectRecordAnchorPane
- TextField editNameActTextField
- TextField editDetailTextField
- AnchorPane editAnchorPane
- Label errorEditLabel
- Label LabelEventName
- Label LabelTeamName
- Button addButton
- TextField addNameActTextField
- TextField addDetailTextField
- AnchorPane addAnchorPane
- Label errorLabel
- Pane blurPane
- TeamScheduleCollection teamScheduleCollection
- Datasource<TeamScheduleCollection> datasource
- TeamSchedule teamSchedule
- EventCollection eventCollection
- Datasource<EventCollection> datasourceEvent
- Event event
~ String[] data
~ String teamId
~ String username
~ String role
- Team team
- TeamList teamList
- Datasource<TeamList> teamListDatasource
~ UserAccount userAccount
+ void initialize()
- void showTable(TeamScheduleCollection)
+ void onDeleteButtonClick()
+ void onEditButtonClick()
+ void OnXButtonClick()
+ void onCommunityButtonClick()
+ void onBackButtonClick()
+ void onCancelButtonClick()
+ void onConfirmEditButtonClick()
+ void onAddButtonClick()
+ void onAddNewButtonClick()
+ void onEndActButtonClick()
+ void onHomePageClick()
}
class cs211.project.controllers.RegisterDoneController {
# void onDoneButtonClick()
}
class cs211.project.controllers.TeamComponentController {
- Label membersLabel
- Label teamNameLabel
- Button joinButton
+ void setData(Team,UserAccount)
}
class cs211.project.controllers.JoinEventController {
- Datasource<EventCollection> e_datasource
- EventCollection events
- Datasource<RoleCollection> datasource
- RoleCollection events_roles
- ArrayList<String> data
- void initialize()
- void onJoinParticipantClick()
- void onJoinMemberClick()
}
class cs211.project.controllers.EventComponentController {
- Label eventDetailLabel
- Label eventNameLabel
- Label eventStartEndLabel
- Label participantLabel
- Button viewDetailButton
- Button joinButton
- LocalDate currentDate
+ void loadEventComponents(EventCollection,TeamList,RoleCollection,Event,UserAccount,AnchorPane,Label,ImageView,Button,Button)
}
class cs211.project.controllers.ManageEventDetailController {
- Label endLabel
- Label eventDetailLabel
- Label eventLocationLabel
- Label eventNameLabel
- ImageView eventPosterImageView
- Label eventTypeLabel
- Label participantLabel
- Label startLabel
- Button backButton
+ void setData(Event,Stage)
}
class cs211.project.controllers.EditEventManagerController {
- TextField OtherTextField
- TextField endTextField
- Label errorField
- TextArea eventDetailTextArea
- TextField eventNameTextField
- Circle imgCircle
- TextField locationTextField
- TextField participantTextField
- ImageView posterImage
- TextField startTextField
- AnchorPane userSettingAnchorPane
- Label nameLabel
- String[] data
- String eventId
- String username
~ boolean status
- Event event
- EventCollection events
- Datasource<EventCollection> eventListFileDatasourceDatasource
+ void initialize()
- void alertPopup()
- void onClickUpdateButton()
~ void onClickLogoutButton()
- void onClickCancelButton()
~ void onClickUserProfile()
}
class cs211.project.controllers.EventsScheduleTableController {
- TableView eventDetailTableView
- AnchorPane whenSelectRecordAnchorPane
- TextField editTimeTextField
- TextField editNameTextField
- TextField editDetailTextField
- AnchorPane editAnchorPane
- Label errorEditLabel
- TextField addTimeTextField
- TextField addNameTextField
- TextField addDetailTextField
- AnchorPane addAnchorPane
- Label errorLabel
- Button addButton
- Button teamsButton
- Button participantsListButton
- Pane blurPane
- EventScheduleList eventScheduleList
- Datasource<EventScheduleList> datasource
- EventSchedule eventSchedule
~ String[] data
~ String eventId
~ String username
~ String role
- UserAccount user
- Event event
- EventCollection events
- Datasource<EventCollection> eventListFileDatasourceDatasource
+ void initialize()
- void showTable(EventScheduleList)
+ void onDeleteButtonClick()
+ void onEditButtonClick()
+ void OnXButtonClick()
+ void onBackButtonClick()
+ void onParticipantsButtonClick()
+ void onTeamButtonClick()
+ void onCancelButtonClick()
+ void onConfirmEditButtonClick()
+ void onAddButtonClick()
+ void onAddNewButtonClick()
+ void onHomePageClick()
}
class cs211.project.controllers.AdminPageController {
- AnchorPane popupPane
- ScrollPane scrollPane
- VBox userBoxContainer
- Button buttonOne
- Button buttonTwo
- Button buttonThree
- Button buttonFour
- Button buttonFive
- Button buttonSix
- Button changePassword
- TextField searchField
- Datasource<AccountCollection> datasource
- AccountCollection user_accounts
- ArrayList<UserAccount> allUsers
- ObservableList<String> allUsernames
- FilteredList<String> filteredUsernames
- {static} int USERS_PER_PAGE
- {static} String userBox_fxml_path
+ void initialize()
+ UserAccount getAdmin()
- List<String> getUsernames(ArrayList<UserAccount>)
- void changePasswordPopUp()
+ void hidePopup()
- void onClickSignOutButton()
- void loadUsers(int)
}
class cs211.project.controllers.MyAccountController {
- Circle imgCircle
- Label nameLabel
- Label dateLabel
- Label emailLabel
- Label usernameLabel
- SettingsController settingsController
- Datasource<AccountCollection> datasource
- AccountCollection user_accounts
- UserAccount user
+ void initialize()
+ void setSettingsController(SettingsController)
+ void setData(String)
- void onEditProfileButtonClick()
- void onEmailEditButtonClick()
- void onChangePwdButtonClick()
}
class cs211.project.controllers.EventINMpaneController {
- Label eventName
- Label eventName1
+ void setData(String)
}
class cs211.project.controllers.ManageEventController {
- GridPane eventBox
- EventCollection events
- Stage alert
- UserAccount user
+ void initialize()
# void onBackButtonClick()
}
class cs211.project.controllers.EventDetailController {
- TextField eventNameTextField
- TextField categoryTextField
- TextField locationTextField
- Label participantLabel
- TextArea eventDetailTextArea
- TextField startDateField
- TextField endDateField
- ImageView eventPosterImageView
- AnchorPane focusOverlay
- AnchorPane userSettingsAnchorPane
- Label nameLabel
- Circle imgCircle
- List<Object> obj
- UserAccount user
- Event receivedEvent
- EventCollection events
- Event event
+ void initialize()
+ void onClickCloseButton()
- void onClickUserProfile()
- void onClickLogoutButton()
- void onHomeButtonClick()
- void onClickJoinedButton()
- void onManageEventClick()
- void onSettingsButtonClick()
}
class cs211.project.controllers.AllTeamTableControllers {
- TableView allTeamTableView
- AnchorPane AddTeamAnchorPane
- TextField addTeamNameTextField
- TextField addTeamCapacityTextField
- Label errorLabel
- DatePicker start
- DatePicker end
- Pane blurPane
- AnchorPane whenSelectRecordAnchorPane
- AnchorPane editTeamAnchorPane
- Label errorEditLabel
- TextField editTeamNameTextField
- TextField editTeamCapacityTextField
- Team team
- TeamList teamList
- Datasource<TeamList> datasource
~ String[] data
~ String eventId
~ String username
~ String role
- UserAccount user
- Event event
- EventCollection events
- Datasource<EventCollection> eventListFileDatasourceDatasource
+ void initialize()
- void showTable(TeamList)
+ void onBackButtonClick()
+ void onAddNewTeamButtonClick()
+ void onCancelButtonClick()
+ void onAddTeamButtonClick()
+ void onSeeDetailButtonClick()
+ void onEditButtonClick()
+ void OnXButtonClick()
+ void onConfirmEditButtonClick()
+ void onTeamScheduleButtonClick()
+ void onHomePageClick()
}
class cs211.project.controllers.CommentViewsController {
- VBox postsContainer
- Label postDetails
- TextField commentField
- Label userNamePoster
- Label role
- int postId
- {static} String commentBox_fxml_path
- {static} String post_csv_path
+ void setData(Object)
- List<String> getUserEventsAndRoles(String)
- String getEventDetail(String)
- String getOrganizerOfEvent(String)
- String getUserNameByPostId(int)
- Pair<String,String> getDataFromCSV(String)
- String getPostDetailForId(int)
+ void handleCommentSend()
- int getNextCommentId()
- List<Comment> getAllCommentsFromCSV()
- void appendCommentToCSV(int,int,String)
- void loadComments()
- List<Comment> getCommentsFromCSV(int)
+ void goBackButton(ActionEvent)
}
class cs211.project.controllers.ProfileSettingsController {
- Circle imgCircle
- Label nameLabel
- Text nameText
- TextField nameField
- Button saveButton
- SettingsController settingsController
- Datasource<AccountCollection> datasource
- AccountCollection user_accounts
- UserAccount user
- Path target
- File destDir
- File file
+ void initialize()
+ void setSettingsController(SettingsController)
+ void setData(String)
+ void handleUploadClick(MouseEvent)
+ void onSaveButtonClick()
}
class cs211.project.controllers.CommentBoxController {
- Label commentDetails
- Label userName
- ImageView profilePicture
+ void setCommentDetail(String,String)
+ void setProfilePicture(String)
}
class cs211.project.controllers.EventManageComponentController {
- Label dateLabel
- Label eventNameLabel
- Label roleLabel
- Label teamNameLabel
- Button detailButton
- Button scheduleButton
- Button editButton
- HBox eventManageBox
- HBox buttonBox
+ void setData(Event,Stage,String,String)
+ void setDataTeam(Event,Team,Stage,String,String)
}
class cs211.project.controllers.RegisterProfileController {
- Circle imgCircle
- Datasource<AccountCollection> datasource
- AccountCollection user_accounts
- UserAccount user
- Path target
- File destDir
- File file
- String filename
+ void initialize()
- void setDefaultImage()
- void deleteImg()
+ void handleUploadClick(MouseEvent)
# void onBackButtonClick()
# void onRemoveButtonClick()
# void onSkipButtonClick()
# void onContinueButtonClick()
}
class cs211.project.controllers.ChangePasswordController {
- Text currPasswordText
- Text confirmPasswordText
- PasswordField currPasswordField
- PasswordField newPasswordField
- PasswordField confirmPasswordField
- Button confirmButton
- Datasource<AccountCollection> datasource
- AccountCollection user_accounts
- UserAccount user
- String currPasswordInput
- String newPasswordInput
- String confirmPasswordInput
- SettingsController settingsController
- AdminPageController adminController
+ void initialize()
+ void setSettingsController(SettingsController)
+ void setAdminController(AdminPageController)
- void checkCredentials()
+ void onConfirmButtonClick()
+ void onCancelButtonClick()
}
class cs211.project.controllers.CreateEventController {
- AnchorPane userSettingsAnchorPane
- AnchorPane focusOverlay
- TextField eventNameTextField
- TextArea eventDetailTextArea
- ComboBox<String> eventCategory
- DatePicker startDatePicker
- DatePicker endDatePicker
- TextField locationTextField
- TextField participantTextField
- ImageView eventPoster
- Label nameLabel
- Circle imgCircle
- EventCollection events
- Datasource<EventCollection> eventListFileDatasourceDatasource
- String projectImagePath
- Path destinationPath
- File selectedFile
- UserAccount user
- LocalDate currentDate
- String formattedDate
- String formattedEndDate
- String currEventId
~ String eventId
+ void initialize()
- void alertPopup(String,String)
- void deleteImg()
- void uploadImg()
- String getExtension(String)
- void handleDragOver(DragEvent)
- void handleDragDrop(DragEvent)
- void onHomeButtonClick()
- void onClickJoinedButton()
- void onManageEventClick()
- void onClickUserProfile()
- void onSettingsButtonClick()
- void onClickLogoutButton()
- void onSetEndDate()
- void onClickChooseFile()
- void onClickCreateButton()
- void onClickCancelButton()
}
class cs211.project.controllers.UserDetailsViewController {
- Label userUsername
- Label lastLoggedInLabel
- TextField firstName
- TextField lastName
- TextField email
- TextField accountCreationDate
- Circle profilePicture
- VBox eventInManagement
- {static} String user_csv_path
- {static} String role_csv_path
- {static} String all_event_csv_path
- UserAccount user
+ void initialize()
+ void setData(Object)
- List<String> getUserEventsAndRoles(String)
- String getOrganizerOfEvent(String)
- String getEventDetail(String)
- List<String> getUserDetailsFromCSV(String)
- void onClickSignOutButton()
+ void onClickGoHomeButton()
}
class cs211.project.controllers.ShowParticipantControllers {
- Label accountNameLabel
- Pane blurPane
- Label emailLabel
- AnchorPane detailAnchorPane
- VBox showParticipantVbox
- ImageView userImageView
- Label usernameLabel
- Button onBanButtonClick
~ String[] data
~ String eventId
~ String username
~ String role
- UserAccount user
- Event event
- EventCollection events
+ void initialize()
+ void OnXButtonClick()
+ void onBackButtonClick()
+ void onHomePageClick()
}
class cs211.project.controllers.MainPageController {
- ScrollPane scrollPane
- AnchorPane focusOverlay
- AnchorPane userSettingsAnchorPane
- GridPane eventBox
- Label nameLabel
- Circle imgCircle
- TextField searchTextField
- AnchorPane confirmPane
- ImageView eventImage
- Label eventNameLabel
- Button joinMemberButton
- Button joinParticipantButton
- RoleCollection roleCollection
- EventCollection loadedEvents
- UserAccount user
- TeamList teamList
~ int row
+ void initialize()
- void loadUserData()
- void loadEventList()
- EventCollection loadEventData()
- void showEvents(EventCollection)
- void showEvent(Event)
- void onClickCreateEventButton()
- void onClickUserProfile()
- void onClickLogoutButton()
- void onHomeButtonClick()
- void onClickJoinedButton()
- void onManageEventClick()
- void onSettingsButtonClick()
- void onCloseButtonClick()
}
class cs211.project.controllers.RegisterController {
~ TextField firstnameField
~ TextField lastnameField
~ TextField emailField
~ TextField usernameField
~ PasswordField passwordField
~ PasswordField passwordConfirmField
~ Text errorLabel
- AccountCollection user_accounts
- Datasource<AccountCollection> datasource
+ void initialize()
- void checkDetails()
- boolean areFieldsEmpty(String,String,String,String)
- boolean isEmailValid(String)
- boolean isNameValid(String)
- void showError(String)
- void handleValidInput(String,String,String,String,String)
- void handleInvalidInput(String,String,String,String,String)
# void onContinueButtonClick()
# void onBackButtonClick()
}
class cs211.project.controllers.ParticipantComponentController {
- Label userName
- Button onDetailButtonClick
+ void initialize()
+ void setUsername(EventCollection,String,String,RoleCollection,UserAccount,AnchorPane,Label,Label,Label,ImageView,Button)
}
class cs211.project.controllers.SettingsController {
- AnchorPane popupPane
- AnchorPane mainPane
- ToggleButton myAccountButton
- ToggleButton myProfileButton
- ToggleGroup navButton
- UserAccount user
+ void initialize()
+ void loadPage(String)
- void loadPopup(String)
+ void showPasswordPopup()
+ void showEmailPopup()
+ void hidePopup()
- void onBackButtonClick()
- void onEscKeyPressed(KeyEvent)
- void onMyAccountButtonClick()
- void onMyProfileButtonClick()
+ UserAccount getUser()
}
class cs211.project.controllers.ChangeEmailController {
- Text currPasswordText
- Text confirmEmailText
- Text newEmailText
- PasswordField currPasswordField
- TextField newEmailField
- TextField confirmEmailField
- Button confirmButton
- Datasource<AccountCollection> datasource
- AccountCollection user_accounts
- UserAccount user
- String currPasswordInput
- String newEmailInput
- String confirmEmailInput
- SettingsController settingsController
+ void initialize()
+ void setSettingsController(SettingsController)
- void checkCredentials()
- void handleEmailChange(UserAccount,String,String)
- boolean isValidEmail(String)
- boolean isUniqueEmail(String)
+ void onConfirmButtonClick()
+ void onCancelButtonClick()
}
class cs211.project.controllers.UserBoxController {
- Label userName
- Circle profilePicture
- UserAccount user
+ void setData(UserAccount)
# void onClickAdminButtonDetail()
}
class cs211.project.controllers.LoginController {
~ TextField usernameField
~ PasswordField passwordField
~ Text errorLabel
- Datasource<AccountCollection> datasource
- AccountCollection user_accounts
- UserAccount user
- String usernameInput
- String passwordInput
+ void initialize()
- void onLoginButtonClick()
- void checkCredentials()
- void onRegisterButtonClick()
- void onOpenDocAction(ActionEvent)
}
class cs211.project.controllers.PostBoxController {
- Label postDetails
- Label userName
- ImageView profilePicture
- int postId
+ void setPostDetail(String,String,int)
- Pair<String,String> getDataFromCSV(String)
+ void goToComment()
}
class cs211.project.controllers.JoinedEventsController {
- Button backButton
- GridPane eventBox
- EventCollection events
- Stage alert
- UserAccount user
+ void initialize()
- void onClickBackButton()
}
class cs211.project.controllers.TableRoleController {
- Label teamNameLabel
- Label peopleLabel
- TableView roleTableView
- AnchorPane nominateAnchorPane
- Pane blurPane
- ImageView leaderImageView
- Button releaseButton
- ImageView userImageView
- Label usernameLabel
- Label accountNameLabel
- Label emailLabel
- Label errorLabel
- Button releaseBanButton
- ImageView bannedImageView
- Button leaderButton
~ String[] data
~ String teamId
~ String username
~ String role
- RoleCollection roleCollection
- Datasource<RoleCollection> datasource
- Role roleObj
- Team team
- TeamList teamList
- Datasource<TeamList> teamListDatasource
- EventCollection eventCollection
- Datasource<EventCollection> datasourceEvent
- Event event
- AccountCollection accountCollection
- Datasource<AccountCollection> datasourceAccount
- UserAccount userAccount
- int totalPeople
+ void initialize()
- void showTable(ShowNameAndRoleCollection)
+ void onBackButtonClick()
+ void OnXButtonClick()
+ void onHomePageClick()
+ void onTeamCommunityButtonClick()
+ void onBanButtonClick()
+ void onReleaseButtonClick()
+ void onLeaderButtonClick()
+ void onMemberButtonClick()
}
class cs211.project.controllers.AlertController {
- Button closeButton
- ImageView iconImage
- Label warningLabel
+ void setData(Stage,String,String)
}


cs211.project.services.DataReceivable <|.. cs211.project.controllers.CommentViewsController
cs211.project.services.DataReceivable <|.. cs211.project.controllers.UserDetailsViewController
@enduml